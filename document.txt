1. In React application can be divided into Components. One is App Component that is application
component and other components are child component of it.

2. Like for twitter app, App component can be breaken into NavBar, Profile, Trends, Feed.
and Feed component can be breaken into Tweet and Like.

3. A component is implemented in form of Javascript class and each class has some state and 
render method. state is data that we want to display when render method is called. and render method
tells what ui should look like. 

4. Output of render method is ReactElement which is simple Javascript Object that maps to DOMElement.

5. React keeps lightweight representation of DOM in form of DOMElement. It is also called VirtualDOM.
when we change state of component, we get new ReactElement. Then children of this new ReactElement,
checks what is changed, and update DOMElement children accordingly to be in sync with changes.

6. React called react because once state changes, React react to it and updates the DOM.

7. Both React and Angular are same in terms of component based architecture however Angular is 
Framework a complete solution while react is library. React responsibility is to render view and
ensure view is in sync with different state of application.

8. To start working with it we have installed 2 extensions:
-> Simple React Snippets by burke holland
-> Prettier - Code formatter by Esben Petersen
-> Go to File > Preference > Setting and from there set "Format on Save"

9. You need to install npm package create-react-app.

10. Once you creatr app by create-react-app you get Development Server, Webpack and Babel.
Babel is toolchain that is mainly used to convert ECMAScript 2015+ code into a backwards compatible version of JavaScript in current and older browsers or environments. 
Transform syntax
Polyfill features that are missing in your target environment (through @babel/polyfill)
Source code transformations (codemods)

11. <div id="root"> is container for react application.

12. In React HTML written in render method of component is neither string nor HTML, but it is JSX stands for 
Javascript XML. We need to pass this JSX to babbel, babbel will convert this JSX into plain javascript.

13. we can check same at https://babeljs.io/repl

14. This line "const html = <h1> Hello world </h1>" translates to:
"use strict";

var html = React.createElement(
  "h1",
  null,
  " Hello world "
);
which browser can understand.

registerServiceWorker.js serves pages from local cache.

15. Even though we not directly use React in code like if I write code as
let some = <h1>HW</h1>
but because this code is traslated to React.createElement by babbel, its important to import React event in that file also.

16. Whenever we save app, our app automatically compiled this is called Hot Model Reloading.

17. To render we require ReactDOM

18. when returning JSX expression using return statement, we must keep it in parenthesis. This is because of automatic semicolon insertion in JS. like

return 
<h1>Hello World</h1>; will be treated in JS as:

return;
<h1>Hello World</h1>

but to avoid such situation we should write it as:
return (
<h1>hw</h1>
)

Also when writing many html statements(more than one), it is important to have at least one parent. Parent is identified by 
div in JSX by babbel. So provide at least one div to provide multiple HTML statements.
Now if you don't want this extra div so we can replace this extra div with React.Fragment

we could not use "class" property in JSX but we can use className as ulimately JSX is a javascript and class is a 
reserved keyword in it.

CTRL + D to activate 2 cursor simulataneously